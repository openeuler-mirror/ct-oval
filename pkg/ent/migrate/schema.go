// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CverefsColumns holds the columns for the "cverefs" table.
	CverefsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "ref_id", Type: field.TypeString},
		{Name: "ref_url", Type: field.TypeString},
	}
	// CverefsTable holds the schema information for the "cverefs" table.
	CverefsTable = &schema.Table{
		Name:       "cverefs",
		Columns:    CverefsColumns,
		PrimaryKey: []*schema.Column{CverefsColumns[0]},
	}
	// ObjectsColumns holds the columns for the "objects" table.
	ObjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "object_id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
	}
	// ObjectsTable holds the schema information for the "objects" table.
	ObjectsTable = &schema.Table{
		Name:       "objects",
		Columns:    ObjectsColumns,
		PrimaryKey: []*schema.Column{ObjectsColumns[0]},
	}
	// OvalsColumns holds the columns for the "ovals" table.
	OvalsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "productname", Type: field.TypeString},
		{Name: "productversion", Type: field.TypeString},
		{Name: "schemaversion", Type: field.TypeString},
		{Name: "ovalversion", Type: field.TypeString},
		{Name: "class", Type: field.TypeString},
		{Name: "family", Type: field.TypeString},
		{Name: "copyright", Type: field.TypeString},
		{Name: "timestamp", Type: field.TypeString},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "severity", Type: field.TypeString},
		{Name: "issuedate", Type: field.TypeString},
		{Name: "platform", Type: field.TypeString},
		{Name: "arch_list", Type: field.TypeString, Default: ""},
		{Name: "cve_list", Type: field.TypeString, Default: ""},
		{Name: "test_list", Type: field.TypeString, Default: ""},
		{Name: "object_list", Type: field.TypeString, Default: ""},
		{Name: "state_list", Type: field.TypeString, Default: ""},
	}
	// OvalsTable holds the schema information for the "ovals" table.
	OvalsTable = &schema.Table{
		Name:       "ovals",
		Columns:    OvalsColumns,
		PrimaryKey: []*schema.Column{OvalsColumns[0]},
	}
	// StatesColumns holds the columns for the "states" table.
	StatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "state_id", Type: field.TypeString},
		{Name: "value", Type: field.TypeString},
		{Name: "tag", Type: field.TypeString},
		{Name: "datatype", Type: field.TypeString},
		{Name: "operation", Type: field.TypeString},
	}
	// StatesTable holds the schema information for the "states" table.
	StatesTable = &schema.Table{
		Name:       "states",
		Columns:    StatesColumns,
		PrimaryKey: []*schema.Column{StatesColumns[0]},
	}
	// TestsColumns holds the columns for the "tests" table.
	TestsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "test_id", Type: field.TypeString},
		{Name: "comment", Type: field.TypeString},
		{Name: "object_id", Type: field.TypeString},
		{Name: "state_id", Type: field.TypeString},
	}
	// TestsTable holds the schema information for the "tests" table.
	TestsTable = &schema.Table{
		Name:       "tests",
		Columns:    TestsColumns,
		PrimaryKey: []*schema.Column{TestsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CverefsTable,
		ObjectsTable,
		OvalsTable,
		StatesTable,
		TestsTable,
	}
)

func init() {
}
